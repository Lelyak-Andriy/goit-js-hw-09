{"version":3,"sources":["js/03-promises.js"],"names":["delayInput","document","querySelector","stepInput","amountInput","createPromisesBtn","createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","oncreatePromise","event","preventDefault","Number","value","step","amount","i","then","console","log","catch","addEventListener"],"mappings":";AACA,MAAMA,EAAaC,SAASC,cAAc,qBACpCC,EAAYF,SAASC,cAAc,oBACnCE,EAAcH,SAASC,cAAc,sBACrCG,EAAoBJ,SAASC,cAAc,UAKjD,SAASI,EAAcC,EAAUC,GACxB,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IAEpBG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,KAEpBA,KAIP,SAASO,EAAgBC,GACvBA,EAAMC,iBACFT,IAAAA,EAAQU,OAAOlB,EAAWmB,OACxBC,MAAAA,EAAOF,OAAOf,EAAUgB,OACxBE,EAASH,OAAOd,EAAYe,OAE7B,IAAA,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAExB,IAANA,IAAUd,GAASY,GACxBd,EAAcgB,EAAGd,GAClBe,KAAK,EAAGhB,SAAAA,EAAUC,MAAAA,MACjBgB,QAAQC,2BAA2BlB,QAAeC,SAEnDkB,MAAM,EAAGnB,SAAAA,EAAUC,MAAAA,MAClBgB,QAAQC,0BAA0BlB,QAAeC,UA7BrDH,EAAkBsB,iBAAiB,QAASZ","file":"03-promises.c40ce704.js","sourceRoot":"../src","sourcesContent":["\nconst delayInput = document.querySelector('input[name=delay]');\nconst stepInput = document.querySelector('input[name=step]');\nconst amountInput = document.querySelector('input[name=amount]');\nconst createPromisesBtn = document.querySelector('button');\n\n\ncreatePromisesBtn.addEventListener('click', oncreatePromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n}\n\nfunction oncreatePromise(event) {\n  event.preventDefault()\n  let delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n  \n  for (let i = 1; i <= amount; i += 1) {\n    let position = i;\n     if (i !== 1) {delay += step}\n    createPromise(i, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n}\n\n\n\n  "]}